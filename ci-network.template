{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Cloudformation template deploying full CI environment with Jenkins and Gitlab in VPC with 2 networks. Public for JM and GL and private for JS",

  "Parameters" : {
   "KeyPairName": {
    "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
    "Type": "AWS::EC2::KeyPair::KeyName",
    "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    
  "Region": {
    "Description": "Region where you want to start it",
    "Type" : "String",
    "Default" : "eu-central-1",
    "AllowedValues" : ["eu-central-1", "eu-west-1", "us-east-1"]
    },
    
    "ServerAccess" : {
      "Description" : "CIDR IP range allowed to login to the Admin instance",
      "Type" : "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default" : "0.0.0.0/0",
      "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription" : "must be a valid CIDR range of the form x.x.x.x/x."
    }
  },

  "Mappings" : {
     "SubnetConfig" : {
      "VPC"    : { "CIDR" : "10.16.0.0/16" },
      "Admin"  : { "CIDR" : "10.16.0.0/24" },
      "Public" : { "CIDR" : "10.16.1.0/24" },
      "Slaves" : { "CIDR" : "10.16.2.0/24" } 
    },
    
    "NatRegionMap" : {
      "us-east-1"      : { "AMI" : "ami-184dc970" },
      "us-west-1"      : { "AMI" : "ami-a98396ec" },
      "us-west-2"      : { "AMI" : "ami-290f4119" },
      "eu-west-1"      : { "AMI" : "ami-14913f63" },
      "eu-central-1"   : { "AMI" : "ami-ae380eb3" },
      "sa-east-1"      : { "AMI" : "ami-8122969c" },
      "ap-southeast-1" : { "AMI" : "ami-6aa38238" },
      "ap-southeast-2" : { "AMI" : "ami-893f53b3" },
      "ap-northeast-1" : { "AMI" : "ami-27d6e626" }
    }
  },

  "Conditions" : {
    
  },

  "Resources" : {
    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "VPC", "CIDR" ]},
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "CIVPC" },
	  { "Key" : "Name", "Value" : "CI VPC" }
        ]
      }
    },
    
    "AdminSubnet" : {
      "DependsOn" : ["VPC"],
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "Admin", "CIDR" ]},
        "AvailabilityZone" : {"Fn::Join":["",[{ "Ref" : "Region" },"a"]]}, 
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "AdminSubnet" },
	  { "Key" : "Name", "Value" : "Admin Subnet" }
        ]
      }
    },
 
    "PublicSubnet" : {
      "DependsOn" : ["VPC"],
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "Public", "CIDR" ]},
        "AvailabilityZone" : {"Fn::Join":["",[{ "Ref" : "Region" },"a"]]}, 
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "PublicSubnet" },
	  { "Key" : "Name", "Value" : "Public Subnet" }
        ]
      }
    },   
    
    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Gateway" }
        ]
      }
    },

    "GatewayToInternet" : {
       "DependsOn" : ["VPC", "InternetGateway"],
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "VPC" },
         "InternetGatewayId" : { "Ref" : "InternetGateway" }
       }
    },
    "PublicRouteTable" : {
      "DependsOn" : ["VPC"],
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Public A-B" }
        ]
      }
    },

    "PublicRoute" : {
      "DependsOn" : ["PublicRouteTable", "InternetGateway"],
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },

    "PublicSubnetRouteTableAssociationA" : {
      "DependsOn" : ["AdminSubnet", "PublicRouteTable"],
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "AdminSubnet" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },
    "PublicSubnetRouteTableAssociationB" : {
      "DependsOn" : ["PublicSubnet", "PublicRouteTable"],
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },
    
     "SlaveSubnet" : {
      "DependsOn" : ["VPC"],
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : {"Fn::Join":["",[{ "Ref" : "Region" },"a"]]},
        "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "Slaves", "CIDR" ]},
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "SlavesSubnet" },
	  { "Key" : "Name", "Value" : "Slaves Subnet" }
        ]
      }
    },

    "SlaveRouteTable" : {
      "DependsOn" : ["VPC"],
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Private" }
        ]
      }
    },

    "SlaveSubnetRouteTableAssociation" : {
      "DependsOn" : ["SlaveSubnet", "SlaveRouteTable"],
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "SlaveSubnet" },
        "RouteTableId" : { "Ref" : "SlaveRouteTable" }
      }
    },
     "PrivateRoute" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "SlaveRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "InstanceId" : { "Ref" : "NATa" }
      }
    },

    "NATa" : {
      "DependsOn" : ["PublicSubnet", "NatSecurityGroup"],
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "AvailabilityZone" : {"Fn::Join":["",[{ "Ref" : "Region" },"a"]]},
        "InstanceType" : "t2.micro",
        "KeyName"  : { "Ref" : "KeyPairName" },
        "SourceDestCheck" : "false",
        "ImageId" : { "Fn::FindInMap" : [ "NatRegionMap", { "Ref" : "AWS::Region" }, "AMI" ]},
		"NetworkInterfaces" : [{
          "GroupSet"                 : [{ "Ref" : "NatSecurityGroup" }],
          "AssociatePublicIpAddress" : "true",
          "DeviceIndex"              : "0",
          "DeleteOnTermination"      : "true",
          "SubnetId"                 : { "Ref" : "PublicSubnet" }
        }],
		"Tags" : [
	 		{ "Key" : "Name", "Value" : "NATa" }
        ],
		"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
	  		"#!/bin/bash\n",
			"yum update -y && yum install -y yum-cron && chkconfig yum-cron on"
		]]}}
      }
    },
    "NatSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup"
      }
        
  },

  "Outputs" : {
	"VPCID" : { "Value" : { "Ref" : "VPC" }
    }
  }
}