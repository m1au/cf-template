{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "CloudFormation template for a generic VPC with public and private subnets",

  "Parameters" : {

  "KeyPairName": {
    "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
    "Type": "AWS::EC2::KeyPair::KeyName",
    "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },

    "ServerAccess" : {
      "Description" : "CIDR IP range allowed to login to the NAT instance",
      "Type" : "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default" : "0.0.0.0/0",
      "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription" : "must be a valid CIDR range of the form x.x.x.x/x."
    }

  },

  "Mappings" : {
    "SubnetConfig" : {
      "VPC"     : { "CIDR" : "10.44.0.0/16" },
      "PublicA"  : { "CIDR" : "10.44.0.0/24" },
      "PrivateA" : { "CIDR" : "10.44.2.0/24" },
      "PublicB"  : { "CIDR" : "10.44.1.0/24" },
      "PrivateB" : { "CIDR" : "10.44.3.0/24" }
    },
    "AZ": {
      "AZA" : {"AZ" : "eu-central-1a"},
      "AZB" : {"AZ" : "eu-central-1b"}
    }, 
    "NatRegionMap" : {
      "us-east-1"      : { "AMI" : "ami-184dc970" },
      "us-west-1"      : { "AMI" : "ami-a98396ec" },
      "us-west-2"      : { "AMI" : "ami-290f4119" },
      "eu-west-1"      : { "AMI" : "ami-14913f63" },
      "eu-central-1"   : { "AMI" : "ami-ae380eb3" },
      "sa-east-1"      : { "AMI" : "ami-8122969c" },
      "ap-southeast-1" : { "AMI" : "ami-6aa38238" },
      "ap-southeast-2" : { "AMI" : "ami-893f53b3" },
      "ap-northeast-1" : { "AMI" : "ami-27d6e626" }
    }
  },

  "Resources" : {

    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "VPC", "CIDR" ]},
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Public" },
	  { "Key" : "Name", "Value" : "NAT VPC" }
        ]
      }
    },

    "PublicSubnetA" : {
      "DependsOn" : ["VPC"],
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "PublicA", "CIDR" ]},
        "AvailabilityZone" : { "Fn::FindInMap" : [ "AZ", "AZA", "AZ" ]}, 
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "PublicA" },
	  { "Key" : "Name", "Value" : "Public Subnet A" }
        ]
      }
    },
    "PublicSubnetB" : {
      "DependsOn" : ["VPC"],
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "PublicB", "CIDR" ]},
        "AvailabilityZone" : { "Fn::FindInMap" : [ "AZ", "AZB", "AZ" ]},
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "PublicB" },
	  { "Key" : "Name", "Value" : "Public Subnet B" }
        ]
      }
    },

    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "PublicA" }
        ]
      }
    },

    "GatewayToInternet" : {
       "DependsOn" : ["VPC", "InternetGateway"],
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "VPC" },
         "InternetGatewayId" : { "Ref" : "InternetGateway" }
       }
    },

    "PublicRouteTable" : {
      "DependsOn" : ["VPC"],
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Public A-B" }
        ]
      }
    },

    "PublicRoute" : {
      "DependsOn" : ["PublicRouteTable", "InternetGateway"],
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },

    "PublicSubnetRouteTableAssociationA" : {
      "DependsOn" : ["PublicSubnetA", "PublicRouteTable"],
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnetA" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },
    "PublicSubnetRouteTableAssociationB" : {
      "DependsOn" : ["PublicSubnetB", "PublicRouteTable"],
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnetB" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },
    
    "PrivateSubnetA" : {
      "DependsOn" : ["VPC"],
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "PrivateA", "CIDR" ]},
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "PrivateA" },
	  { "Key" : "Name", "Value" : "Private Subnet A" }
        ]
      }
    },

    "PrivateRouteTable" : {
      "DependsOn" : ["VPC"],
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "PrivateA" }
        ]
      }
    },

    "PrivateSubnetRouteTableAssociationA" : {
      "DependsOn" : ["PrivateSubnetA", "PrivateRouteTable"],
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnetA" },
        "RouteTableId" : { "Ref" : "PrivateRouteTable" }
      }
    },

    "NatSecurityGroup" : {
      "DependsOn" : ["VPC"],
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "NAT Security Group",
        "VpcId" : { "Ref" : "VPC" },
	"SecurityGroupIngress" : [{
            "IpProtocol" : "tcp",
            "FromPort" : "22",
            "ToPort" : "22",
            "CidrIp" : { "Ref" : "ServerAccess" }
        },{
            "IpProtocol" : "tcp",
            "FromPort" : "3389",
            "ToPort" : "3389",
            "CidrIp" : { "Ref" : "ServerAccess" }
        }],
	"Tags" : [
	  { "Key" : "Name", "Value" : "NAT Security Group" }
        ]
      }
    },

    "NatSecurityGroupIngress1" : {
      "DependsOn" : ["NatSecurityGroup"],
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
	"GroupId": { "Ref": "NatSecurityGroup" },
	"IpProtocol": "icmp",
	"FromPort": "-1",
	"ToPort": "-1",
	"SourceSecurityGroupId": { "Ref": "NatSecurityGroup" }
      }
    },

    "NatSecurityGroupIngress22" : {
      "DependsOn" : ["NatSecurityGroup"],
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
	"GroupId": { "Ref": "NatSecurityGroup" },
	"IpProtocol": "tcp",
	"FromPort": "22",
	"ToPort": "22",
	"SourceSecurityGroupId": { "Ref": "NatSecurityGroup" }
      }
    },

    "NatSecurityGroupIngress3389" : {
      "DependsOn" : ["NatSecurityGroup"],
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
	"GroupId": { "Ref": "NatSecurityGroup" },
	"IpProtocol": "tcp",
	"FromPort": "3389",
	"ToPort": "3389",
	"SourceSecurityGroupId": { "Ref": "NatSecurityGroup" }
      }
    },

    "NatSecurityGroupIngress80" : {
      "DependsOn" : ["NatSecurityGroup"],
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
	"GroupId": { "Ref": "NatSecurityGroup" },
	"IpProtocol": "tcp",
	"FromPort": "80",
	"ToPort": "80",
	"SourceSecurityGroupId": { "Ref": "NatSecurityGroup" }
      }
    },

    "NatSecurityGroupIngress443" : {
      "DependsOn" : ["NatSecurityGroup"],
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
	"GroupId": { "Ref": "NatSecurityGroup" },
	"IpProtocol": "tcp",
	"FromPort": "443",
	"ToPort": "443",
	"SourceSecurityGroupId": { "Ref": "NatSecurityGroup" }
      }
    },

    "NATa" : {
      "DependsOn" : ["PublicSubnetA", "NatSecurityGroup"],
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "AvailabilityZone" : { "Fn::FindInMap" : [ "AZ", "AZA", "AZ" ]},
        "InstanceType" : "t2.micro",
        "KeyName"  : { "Ref" : "KeyPairName" },
        "SourceDestCheck" : "false",
        "ImageId" : { "Fn::FindInMap" : [ "NatRegionMap", { "Ref" : "AWS::Region" }, "AMI" ]},
	"NetworkInterfaces" : [{
          "GroupSet"                 : [{ "Ref" : "NatSecurityGroup" }],
          "AssociatePublicIpAddress" : "true",
          "DeviceIndex"              : "0",
          "DeleteOnTermination"      : "true",
          "SubnetId"                 : { "Ref" : "PublicSubnetA" }
        }],
	"Tags" : [
	  { "Key" : "Name", "Value" : "NATa" }
        ],
	"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
	  "#!/bin/bash\n",
	  "yum update -y && yum install -y yum-cron && chkconfig yum-cron on"
	]]}}
      }
    },


    "PrivateRouteA" : {
      "DependsOn" : ["PrivateRouteTable", "NATa"],
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "InstanceId" : { "Ref" : "NATa" }
      }
    }

  },

  "Outputs" : {
    "NATIPA" : { "Description" : "NAT IP address", "Value" : { "Fn::GetAtt" : [ "NATa", "PublicIp" ] } }
  }

}

